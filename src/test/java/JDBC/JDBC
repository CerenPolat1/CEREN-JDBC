
WHAT IS JDBC?

JAVA DATABASE CONNECTIVITY
--COMES WITH JDK, WORK WITH RELATIONAL DATABASE SYSTEM
--ITS UNDER java.sql.package import java.sql.*;
--IT HAS SET OF INTERFACES AND CLASSES TO WORK WITH ANY RDBMS

HOW JDBC WORKS?
JDBC OFFERS A PROGRAMMING-LEVEL INTERFACE
THAT HANDLES THE MECHANICS OF JAVA APPLICATIONS COMMUNICATING WITH A DATABASE OR RDBMS.
DATABASETHE JDBC INTERFACE CONSIST OF 2 LAYERS:

1- THE JDBC API SUPPORTS COMMUNICATION BETWEEN JAVA APP AND THE JDBC MANAGER.
2-THE JDBC DRIVER SUPPORTS COMMUNICATION BETWEEN JDBC MANAGER AND THE DATABASE DRIVER.
JDBC IS THE COMMON API THAT YOUR APPLICATION CODE INTERACTS WITH.
BENEATH THAT IS THE JDBC-COMPLIANT DRIVER FOR


JAVA APP----- JDBC----ACTUAL DATABASE
JDBC DOESNT PROVIDE ACTUAL IMPLEMENTATION.
EACH RDBMS(DATABASE LIKE ORACLE, MYSQL, POSTGRESS) WILL PROVIDE ACTUAL IMPLEMENTATION KNOWN AS DRIVER


we used the maven dependency to import this driver


JDBC HAS DRIVER MANAGER CLASS TO MANAGE CONNECTION ACCORTIONG TO THE URL, USERNAME, PASSWORD

URL|CONNECTION STRING (YOU WILL BE GIVE THIS INFORMATION)

jdbc:oracle:thin:@54.88.118.39:1521:XE
"jdbc:oracle:thin:@IP_ADDRESS:1521:XE";
JBDC-----CONNECTION USING JAVA
ORACLE-----DATABASE VENDOR, RDBMS
THIN------ONE TYPE ORACLE DRIVER
IP_ADDRESS------ HOSTNAME OR IP
1521-----THIS IS PORT NAME USED FOR ORACLE DATABASE
XE------SID NAME UNIQUE IDENTIFIER FOR YOUR ORACLE DATABASE


YENI BIR MACHINELE ESLESMEK IF YOU WANNA CONNECT ORACLE,ISTEDIGINDE SADECE @54.88.118.39 IP ADDRESS DEGIDIR

HOW WE DO ALL JDBC THINGS?
IN SQL, WE CONNECT, THEN  WE WRITE QUERIES ADN RUN----IN MANUALPART
TO BE ABLE TO DO THOSE STEPS WE WILL GET HELP FROM DEPENDENCIES AND JDBC WILL IMPORT SOME INTERFACES



------------BIZIM JDBC'DE YAPILAN 3 SEYI YAPMAMIZA YARDIM EDEN 3 SEY:-----------

3 IMPORTANT INTERFACES IN JDBC:

1-CONNECTION:
THIS INTERFACE REPRESENTS THE CONNECTION WITH A SPECIFIC DATABASE
SQL STATEMENTS ARE EXECUTED IN THE CONTEXT OF A CONNECTION
DRIVER MANAGER WILL LOOK AT THE URL, USERNAME, PASSWORD THAT YOU PROVIDED AND CONNECT.
--CONNECTION connection=DriverManager.getConnection(url, username, password)

2-STATEMENT:
THIS INTERFACE REPRESENTS A STATIC SQL STATEMENT
USING THE STATEMENT OBJECT AND ITS METHODS, YOU CAN EXECUTE AN SQL STATEMENT AND GET THE RESULT OF IT

YOU NEED TO USE -CONNECTION- OBJECT CREATED ABOVE TO CREATE STATEMENT OBJECT
THERE ARE 2 WAYS TO CREATE A STATEMENT OBJECT:
1-   Statement statement=connection.create.createStatement();
   //default statement will be able to only move forward in resultset

   //this will be used created ResultSet that can move freely
   Statement statement= conn.createStatement(ResultSet.TYPE.SCROLL_INTENSIVE, ResultSet.CONCUR_READ_ONLY);

3-ResultSet:
RESULTSET WILL ST0RE THE QUERY RESULT (THE QUERY THAT YOU WANNA RUN)

ResultSet resultset=statement.executeQuery("SELECT*FROM employees");

Connection, Statement, ResultSet ARE ALL RESOURCES NEED TO BE CLOSED AFTER USAGE
CALL THE CLOSE METHOD TO CLOSE AT THE END OF THE CODE
connection.close();
statement.close();
resultSet.close();


---------Getting the data from database: ----------
getString(ColumName)
getString(Index)
getInt(ColumName)
getInt(Index)
getDouble(ColumName)
getDouble(Index)
getDate(ColumName)
getDate(Index)

rs.getString(1) ==>  return the first colomn cell value at this row
rs.getString("colomn name") ==> returns ther cell value at this column at this row

------other methods available under ResultSet class:
rs.next()   ==> used to move the cursor to the one row next from the current position















